{"version":3,"sources":["components/CharacterCard/index.js","components/Container/index.js","components/NavBar/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","alt","name","src","image","id","onClick","Container","className","children","NavBar","displayMessage","currentArrLength","_this","arrLength","score","topScore","this","React","Component","App","state","characters","clickedCharacters","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleEvent","x","indexOf","setState","concat","Object","toConsumableArray","_this2","components_NavBar","components_Container","map","components_CharacterCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"m9DAaeA,MAVf,SAAuBC,GACnB,OACIC,EAAAC,EAAAC,cAAA,OACEC,IAAKJ,EAAMK,KACXC,IAAKN,EAAMO,MACXC,GAAIR,EAAMQ,GACVC,QAAS,kBAAMT,EAAMS,QAAQT,EAAMK,gBCD9BK,MAJf,SAAmBV,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aAAaX,EAAMY,kBCuC5BC,oNAtCbC,eAAiB,WACf,IAAMC,EAAmBC,EAAKhB,MAAMiB,UACpC,OAAyB,IAArBD,EAAKhB,MAAMkB,OAAuC,IAAxBF,EAAKhB,MAAMmB,SAChC,2BACEH,EAAKhB,MAAMkB,MAAQ,EACrB,yBACuB,IAArBF,EAAKhB,MAAMkB,OAAmC,IAApBH,EAC5B,gCADF,2EAMP,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,iDACbV,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,gBAAb,aAEAV,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,sBAEZV,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,YACZV,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,WACVS,KAAKN,eAAeM,KAAKpB,SAI9BC,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,mBACZV,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,YAAb,UAAgCS,KAAKpB,MAAMkB,QAE7CjB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,mBACZV,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,YAAb,cAAoCS,KAAKpB,MAAMmB,qBA/BxCE,IAAMC,YC2EZC,6MAtEbC,MAAQ,CACNC,aACAC,kBAAmB,GACnBR,MAAO,EACPC,SAAU,KAIZQ,QAAU,SAAAC,GAKR,IAJA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAIlB,IAAMD,GAIXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,KAGTQ,YAAc,SAAAC,GACZrB,EAAKW,QAAQX,EAAKQ,MAAMC,aAEyB,IAA7CT,EAAKQ,MAAME,kBAAkBY,QAAQD,GACvCrB,EAAKuB,SAAS,CACZb,kBAAiB,GAAAc,OAAAC,OAAAC,EAAA,EAAAD,CAAMzB,EAAKQ,MAAME,mBAAjB,CAAoCW,IACrDnB,MAAOF,EAAKQ,MAAMN,MAAQ,IAG5BF,EAAKuB,SAAS,CACZb,kBAAmB,GACnBR,MAAO,EACPC,SAAUH,EAAKQ,MAAMN,iFAMlB,IAAAyB,EAAAvB,KACP,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAD,CACE1B,MAAOE,KAAKI,MAAMN,MAClBC,SAAUC,KAAKI,MAAML,SACrBF,UAAWG,KAAKI,MAAME,kBAAkBM,SAE1C/B,EAAAC,EAAAC,cAAC0C,EAAD,KACGzB,KAAKI,MAAMC,WAAWqB,IAAI,SAAArB,GAAU,OACnCxB,EAAAC,EAAAC,cAAC4C,EAAD,CACEvC,GAAIiB,EAAWjB,GACfwC,IAAKvB,EAAWjB,GAChBD,MAAOkB,EAAWlB,MAClBF,KAAMoB,EAAWpB,KACjBI,QAASkC,EAAKP,yBAhEVd,mBCDlB2B,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.64f4a1e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (\n        <img \n          alt={props.name} \n          src={props.image} \n          id={props.id} \n          onClick={() => props.onClick(props.name)}/>\n    );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\n// props \nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n// props \nclass NavBar extends React.Component {\n\n  displayMessage = () => {\n    const currentArrLength = this.props.arrLength;\n    if (this.props.score === 0 && this.props.topScore === 0) {\n      return \"Click an image to being!\"\n    } else if (this.props.score > 0) {\n      return \"You guessed correctly!\"\n    } else if (this.props.score === 0 && currentArrLength ===0 ){\n      return \"You guessed incorrectly!\"\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\">MemorEact</a>\n\n          <ul className=\"navbar-nav mr-auto\">\n\n            <li className=\"nav-item\">\n              <a className=\"message\">\n                {this.displayMessage(this.props)}\n              </a>\n            </li>\n\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\">Score: {this.props.score}</a>\n            </li>\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\">Top Score: {this.props.topScore}</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default NavBar;\n\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Container from \"./components/Container\";\nimport characters from \"./characters.json\";\nimport NavBar from \"./components/NavBar\";\n\nclass App extends Component {\n\n  // Setting this.state.character to the character json array\n  state = {\n    characters,\n    clickedCharacters: [],\n    score: 0,\n    topScore: 0\n  };\n\n  // Fisher-Yates Shuffle\n  shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    // While the currentIndex(array.length, temporaryValue or randomIndex) do not equal 0\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      // Obtain random index based on array.length\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  handleEvent = x => {\n    this.shuffle(this.state.characters);\n    // indexOf(value) searches array for value and if it is not there indexOf will return -1, if it is there is will return 1.\n    if (this.state.clickedCharacters.indexOf(x) === -1) {\n      this.setState({\n        clickedCharacters: [...this.state.clickedCharacters, x],\n        score: this.state.score + 1\n      })\n    } else {\n      this.setState({\n        clickedCharacters: [],\n        score: 0,\n        topScore: this.state.score\n      })\n    }\n  }\n\n  // Map over this.state.characters and render a characterCard component for each character object\n  render() {\n    return (\n      <div>\n        <NavBar \n          score={this.state.score}\n          topScore={this.state.topScore}\n          arrLength={this.state.clickedCharacters.length}\n        />\n        <Container>\n          {this.state.characters.map(characters => (\n            <CharacterCard\n              id={characters.id}\n              key={characters.id}\n              image={characters.image}\n              name={characters.name}\n              onClick={this.handleEvent}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}